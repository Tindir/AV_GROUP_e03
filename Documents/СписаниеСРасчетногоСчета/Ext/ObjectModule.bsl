#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения, Отказ);
	ПодготовитьТаблицыДляДвижений(Ссылка, ДополнительныеСвойства, РежимПроведения, Отказ);
	СформироватьДвиженияВРегистры(ДополнительныеСвойства, Движения, Отказ);
	
	СформироватьДвиженияХозрасчетный(ДополнительныеСвойства, Движения, Отказ)
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения, Отказ) Экспорт 
	
	ДополнительныеСвойства.Вставить("ВалютаРегУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	
КонецПроцедуры

Процедура ПодготовитьТаблицыДляДвижений(Ссылка, ДополнительныеСвойства, РежимПроведения, Отказ) Экспорт

КонецПроцедуры

Процедура СформироватьДвиженияВРегистры(ДополнительныеСвойства, Движения, Отказ) Экспорт

КонецПроцедуры

Процедура СформироватьДвиженияХозрасчетный(ДополнительныеСвойства, Движения, Отказ) Экспорт 
	Хозрасчетный = Движения.Хозрасчетный;

	//тут в БУ модуль по определению счета банк, упростим
	СчетБанк = ПланыСчетов.Хозрасчетный.РасчетныеСчета; 
	Если ДополнительныеСвойства.ВалютаРегУчета <> Валюта Тогда 
		СчетБанк = ПланыСчетов.Хозрасчетный.ВалютныеСчета;
	КонецЕсли;    
	ДополнительныеСвойства.Вставить("СчетБанк", СчетБанк);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Документ.Дата КАК Период,
		|	Документ.Организация КАК Организация,
		|	ВЫБОР
		|		КОГДА Документ.Валюта <> &ВалютаРегУчета
		|			ТОГДА Документ.Валюта
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|	КОНЕЦ КАК ВалютаДт,
		|	ВЫБОР
		|		КОГДА Документ.Валюта <> &ВалютаРегУчета
		|			ТОГДА Документ.Валюта
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|	КОНЕЦ КАК ВалютаКт,
		|	&СчетБанк КАК СчетКт,
		|	Документ.СчетОрганизации КАК СубконтоКт1,
		|	Документ.СчетРасчетов КАК СчетДт,
		|	Документ.Контрагент КАК СубконтоДт1,
		|	Документ.Субконто2 КАК СубконтоДт2,
		|	ВЫБОР
		|		КОГДА Документ.Валюта = &ВалютаРегУчета
		|			ТОГДА Документ.Сумма
		|		ИНАЧЕ Документ.Сумма * Документ.Курс * Документ.Кратность
		|	КОНЕЦ КАК Сумма, 
		|	ВЫБОР
		|		КОГДА Документ.Валюта = &ВалютаРегУчета
		|			ТОГДА Документ.Сумма
		|		ИНАЧЕ Документ.Сумма * Документ.Курс * Документ.Кратность
		|	КОНЕЦ КАК СуммаНУ,
		|	ВЫБОР
		|		КОГДА Документ.Валюта = &ВалютаРегУчета
		|			ТОГДА 0
		|		ИНАЧЕ Документ.Сумма
		|	КОНЕЦ КАК СуммаВалютаДт
		|ИЗ
		|	Документ.СписаниеСРасчетногоСчета КАК Документ
		|ГДЕ
		|	Документ.Ссылка = &Ссылка
		|	И Документ.ЭтоРасчетыПоЗайму = ИСТИНА";
	//
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("СчетБанк", СчетБанк);
	Запрос.УстановитьПараметр("ВалютаРегУчета", ДополнительныеСвойства.ВалютаРегУчета);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВДЗ = РезультатЗапроса.Выбрать();
	
	Пока ВДЗ.Следующий() Цикл
		СтрД = Хозрасчетный.Добавить();
		ЗаполнитьЗначенияСвойств(СтрД, ВДЗ);
		
		//в БУХ ТУТ универсальная обработка установки субконто. Имитируем
		Для Индекс = 1 ПО 3 Цикл
			ЗначениеСубконто = Неопределено;
			Если РезультатЗапроса.Колонки.Найти("СубконтоДт" + Индекс) <> Неопределено Тогда
				ЗначениеСубконто = ВДЗ["СубконтоДт" + Индекс];		
			КонецЕсли; 
			Если ЗначениеСубконто = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Для каждого Субконто Из СтрД.СчетДт.ВидыСубконто Цикл 
				
				Если Субконто.ВидСубконто.ТипЗначения.СодержитТип(ТипЗнч(ЗначениеСубконто)) Тогда
					СтрД.СубконтоДт.Вставить(Субконто.ВидСубконто, ЗначениеСубконто)	
				КонецЕсли;
			КонецЦикла;			
	
		КонецЦикла;	
		Для Индекс = 1 ПО 3 Цикл
			ЗначениеСубконто = Неопределено;
			Если РезультатЗапроса.Колонки.Найти("СубконтоКт" + Индекс) <> Неопределено Тогда
				ЗначениеСубконто = ВДЗ["СубконтоКт" + Индекс];		
			КонецЕсли;  
			Если ЗначениеСубконто = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Для каждого Субконто Из СтрД.СчетКт.ВидыСубконто Цикл 
				
				Если Субконто.ВидСубконто.ТипЗначения.СодержитТип(ТипЗнч(ЗначениеСубконто)) Тогда
					СтрД.СубконтоКт.Вставить(Субконто.ВидСубконто, ЗначениеСубконто)	
				КонецЕсли;
			КонецЦикла;			
		КонецЦикла;

	КонецЦикла;
	
	ПереоценкаВалютныхСчетов(Ссылка, Хозрасчетный, ДополнительныеСвойства);
	
	Хозрасчетный.Записывать = Истина;
КонецПроцедуры

Процедура ПереоценкаВалютныхСчетов(ДокументСсылка, Хозрасчетный, ДополнительныеСвойства)
	ЗначениеВозврата = Ложь;
	
	Если ДокументСсылка.Валюта = ДополнительныеСвойства.ВалютаРегУчета Тогда
		Возврат;		
	КонецЕсли;
	
	ТаблицаПоступлений = Документы.ДоговорЗайма.ПолучитьДанныеРасчета(ДокументСсылка.Субконто2, ДокументСсылка.Дата);
	
	Запрос = Новый Запрос;   
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаПоступлений", ТаблицаПоступлений);  
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка); 
	Запрос.Текст = "ВЫБРАТЬ
	               |	Т.Дата КАК Дата,
	               |	Т.ДоговорЗайма КАК ДоговорЗайма,
	               |	Т.Документ КАК Документ,
	               |	Т.Контрагент КАК Контрагент,
	               |	Т.Сумма КАК Сумма,
	               |	Т.Счет КАК Счет
	               |ПОМЕСТИТЬ ТаблицаПоступлений
	               |ИЗ
	               |	&ТаблицаПоступлений КАК Т
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Т.Дата КАК Дата,
	               |	Т.Документ.Валюта КАК Валюта,
	               |	МАКСИМУМ(К.Период) КАК Период
	               |ПОМЕСТИТЬ КурсВалютСрезНаДату
	               |ИЗ
	               |	ТаблицаПоступлений КАК Т
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК К
	               |		ПО Т.Документ.Валюта = К.Валюта
	               |			И Т.Дата >= К.Период
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Т.Дата,
	               |	Т.Документ.Валюта
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Т.Дата КАК Дата,
	               |	Т.ДоговорЗайма КАК ДоговорЗайма,
	               |	Т.Документ КАК Документ,
	               |	Т.Документ.Валюта КАК Валюта,
	               |	Т.Контрагент КАК Контрагент,
	               |	Т.Сумма КАК Сумма,
	               |	Т.Счет КАК Счет,
	               |	КурсыВалют.Значение КАК Курс,
	               |	КурсыВалют.Кратность КАК Кратность Поместить ПриведеннаяТаблицаПоступления
	               |ИЗ
	               |	ТаблицаПоступлений КАК Т
	               |		ЛЕВОЕ СОЕДИНЕНИЕ КурсВалютСрезНаДату КАК К
	               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	               |			ПО К.Период = КурсыВалют.Период
	               |				И К.Валюта = КурсыВалют.Валюта
	               |		ПО Т.Дата = К.Дата
	               |			И Т.Документ.Валюта = К.Валюта";
	//                                                           
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	Операция.Ссылка КАК ДокументСсылка,
	               |	Операция.Дата КАК Период,
	               |	Операция.Субконто2 КАК СубконтоКт2,
	               |	Операция.Организация КАК Организация,
	               |	Операция.Контрагент КАК СубконтоКт1,
	               |	Операция.СчетРасчетов КАК СчетРасчетовДокумента,
	               |	Операция.Валюта КАК ВалютаДокумента,
	               |	Операция.Курс КАК КурсДокумента,
	               |	Операция.Кратность КАК КратностьДокумента,
	               |	Операция.Сумма КАК СуммаВалДокумента,
	               |	ТаблицаПоступления.Валюта КАК Валюта,
	               |	ТаблицаПоступления.Сумма КАК СуммаВал,
	               |	ТаблицаПоступления.Курс КАК Курс,
	               |	ТаблицаПоступления.Кратность КАК Кратность,
	               |	Операция.Сумма * (Операция.Курс - ТаблицаПоступления.Курс) * ТаблицаПоступления.Кратность КАК СуммаПереоценкиБУ
	               |ИЗ
	               |	Документ.СписаниеСРасчетногоСчета КАК Операция
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ПриведеннаяТаблицаПоступления КАК ТаблицаПоступления
	               |		ПО Операция.Субконто2 = ТаблицаПоступления.ДоговорЗайма
	               |ГДЕ
	               |	Операция.Ссылка = &ДокументСсылка";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить();
	
	Для Каждого СтрВ Из Выборка Цикл
		Стр = Хозрасчетный.Добавить();
		        
		Стр.Период = СтрВ.Период;
		Стр.Организация = СтрВ.Организация;
		//Стр.ВалютаДт = Выборка.ВалютаДокумента;
		Стр.ВалютаКт = СтрВ.ВалютаДокумента;
		
		СчетДоходовРасходов = ПланыСчетов.Хозрасчетный.ПрочиеДоходы;
		Если СтрВ.СуммаПереоценкиБУ < 0 Тогда
			СчетДоходовРасходов = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		КонецЕсли;
		
		Стр.СчетДт = СчетДоходовРасходов;
		Стр.Сумма = Макс(-СтрВ.СуммаПереоценкиБУ, СтрВ.СуммаПереоценкиБУ); 
		
		Стр.СчетКт = СтрВ.СчетРасчетовДокумента;
		Для Индекс = 1 ПО 3 Цикл
			ЗначениеСубконто = Неопределено;
			Если Выборка.Колонки.Найти("СубконтоКт" + Индекс) <> Неопределено Тогда
				ЗначениеСубконто = СтрВ["СубконтоКт" + Индекс];		
			КонецЕсли;  
			Если ЗначениеСубконто = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Для каждого Субконто Из Стр.СчетКт.ВидыСубконто Цикл 
				
				Если Субконто.ВидСубконто.ТипЗначения.СодержитТип(ТипЗнч(ЗначениеСубконто)) Тогда
					Стр.СубконтоКт.Вставить(Субконто.ВидСубконто, ЗначениеСубконто)	
				КонецЕсли;
			КонецЦикла;			
		КонецЦикла;
		
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти

#КонецЕсли