#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения, Отказ);
	ПодготовитьТаблицыДляДвижений(Ссылка, ДополнительныеСвойства, РежимПроведения, Отказ);
	СформироватьДвиженияВРегистры(ДополнительныеСвойства, Движения, Отказ);
	
	СформироватьДвиженияХозрасчетный(ДополнительныеСвойства, Движения, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения, Отказ) Экспорт 
	
	ДополнительныеСвойства.Вставить("ВалютаРегУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	ДополнительныеСвойства.Вставить("СтавкаРефинанфирования", РегистрыСведений.СтавкиРефинансирования.СтавкаРефинансирования(Ссылка.ДатаЗакрытияДоговора));
	ДополнительныеСвойства.Вставить("ЗначениеПредельнойВеличиныПроцентаЗайма", ДополнительныеСвойства.СтавкаРефинанфирования * 1.1); 
	ДополнительныеСвойства.Вставить("ЗначениеПредельнойВеличиныПроцентаВалютногоЗайма", 15); 
	
КонецПроцедуры

Процедура ПодготовитьТаблицыДляДвижений(Ссылка, ДополнительныеСвойства, РежимПроведения, Отказ) Экспорт
	
	ДополнительныеСвойства.Вставить("ТаблицыДляДвижений", новый Структура());
	
	ПодготовитьТаблицыДляДвижений_ПараметрыДоговораЗайма(Ссылка, ДополнительныеСвойства, РежимПроведения, Отказ);	
	//ПодготовитьТаблицыДляДвижений_ПараметрыДоговораЗаймаАгент(Ссылка, ДополнительныеСвойства, РежимПроведения, Отказ);	
	
КонецПроцедуры

Процедура ПодготовитьТаблицыДляДвижений_ПараметрыДоговораЗайма(Ссылка, ДополнительныеСвойства, РежимПроведения, Отказ) Экспорт
	
	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ПараметрыДоговораЗайма", Новый ТаблицаЗначений);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка); 
	Запрос.УстановитьПараметр("ДоговорЗайма", Ссылка.ДокументОснование);
	Запрос.УстановитьПараметр("Организация", Ссылка.ДокументОснование.Организация);
	Запрос.УстановитьПараметр("Контрагент", Ссылка.ДокументОснование.Контрагент);
	Запрос.УстановитьПараметр("Период", КонецДня(Ссылка.ДатаЗакрытияДоговора) - 1);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	КОНЕЦПЕРИОДА(ДокументЗакрытия.ДатаЗакрытияДоговора, ДЕНЬ) КАК Период,
	               |	ПараметрыДоговора.Организация КАК Организация,
	               |	ПараметрыДоговора.Контрагент КАК Контрагент,
	               |	ПараметрыДоговора.ДоговорЗайма КАК ДоговорЗайма,
	               |	ПараметрыДоговора.ДатаНачала КАК ДатаНачала,
	               |	КОНЕЦПЕРИОДА(ДокументЗакрытия.ДатаЗакрытияДоговора, ДЕНЬ) КАК ДатаОкончания,
	               |	ПараметрыДоговора.Валюта КАК Валюта,
	               |	ПараметрыДоговора.СчетУчета КАК СчетУчета,
	               |	ПараметрыДоговора.СчетУчетаПроцентов КАК СчетУчетаПроцентов,
	               |	ПараметрыДоговора.Процент КАК Процент,
	               |	ДокументЗакрытия.Сумма КАК СуммаЗайма,
	               |	ДокументЗакрытия.СуммаПроцента КАК СуммаПроцентовНачислено,
	               |	ИСТИНА КАК Состояние
	               |ИЗ
	               |	Документ.ЗакрытиеДоговораЗайма КАК ДокументЗакрытия
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыДоговораЗайма.СрезПоследних(
	               |				&Период,
	               |				Организация = &Организация
	               |					И Контрагент = &Контрагент
	               |					И ДоговорЗайма = &ДоговорЗайма) КАК ПараметрыДоговора
	               |		ПО ДокументЗакрытия.ДокументОснование = ПараметрыДоговора.ДоговорЗайма
	               |ГДЕ
	               |	ДокументЗакрытия.Ссылка = &ДокументСсылка";
	//
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выгрузить();
	
	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ПараметрыДоговораЗайма", Выборка);
	
КонецПроцедуры

Процедура СформироватьДвиженияВРегистры(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	ТаблицаДвижений = ДополнительныеСвойства.ТаблицыДляДвижений.ПараметрыДоговораЗайма;
	Если ТаблицаДвижений.Количество() > 0 Тогда
		Движения.ПараметрыДоговораЗайма.Записывать = Истина;
		Движения.ПараметрыДоговораЗайма.Загрузить(ТаблицаДвижений);
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьДвиженияХозрасчетный(ДополнительныеСвойства, Движения, Отказ) Экспорт 
	Хозрасчетный = Движения.Хозрасчетный;

	//тут в БУ модуль по определению счета банк, упростим
	СчетБанк = ПланыСчетов.Хозрасчетный.РасчетныеСчета; 
	Если ДополнительныеСвойства.ВалютаРегУчета <> Ссылка.ДокументОснование.Валюта Тогда 
		СчетБанк = ПланыСчетов.Хозрасчетный.ВалютныеСчета;
	КонецЕсли;    
	ДополнительныеСвойства.Вставить("СчетБанк", СчетБанк);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗакрытиеДоговораЗайма.ДатаЗакрытияДоговора КАК Дата,
	               |	ЗакрытиеДоговораЗайма.ДокументОснование.Организация КАК Организация,
	               |	ЗакрытиеДоговораЗайма.ДокументОснование.Контрагент КАК Контрагент,
	               |	ЗакрытиеДоговораЗайма.ДокументОснование КАК ДокументСсылка,
	               |	ЗакрытиеДоговораЗайма.СуммаПроцента КАК СуммаПроцента,
	               |	ЗакрытиеДоговораЗайма.ДокументОснование.Процент КАК Процент,
	               |	ЗакрытиеДоговораЗайма.ДокументОснование.Валюта КАК Валюта,
	               |	ВЫБОР
	               |		КОГДА &ВалютаРегУчета = ЗакрытиеДоговораЗайма.ДокументОснование.Валюта
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК ВВалюте,
	               |	ЗакрытиеДоговораЗайма.ДокументОснование.СчетУчетаПроцентов КАК СчетУчетаПроцентов
	               |ПОМЕСТИТЬ Данные
	               |ИЗ
	               |	Документ.ЗакрытиеДоговораЗайма КАК ЗакрытиеДоговораЗайма
	               |ГДЕ
	               |	ЗакрытиеДоговораЗайма.Ссылка = &ДокументСсылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Т.Дата КАК Дата,
	               |	Т.Валюта КАК Валюта,
	               |	МАКСИМУМ(К.Период) КАК Период
	               |ПОМЕСТИТЬ КурсВалютСрезНаДату
	               |ИЗ
	               |	Данные КАК Т
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК К
	               |		ПО Т.Валюта = К.Валюта
	               |			И Т.Дата >= К.Период
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Т.Дата,
	               |	Т.Валюта
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КурсВалютСрезНаДату.Дата КАК Дата,
	               |	КурсВалютСрезНаДату.Валюта КАК Валюта,
	               |	КурсыВалют.Значение КАК Курс,
	               |	КурсыВалют.Кратность КАК Кратность
	               |ПОМЕСТИТЬ ПриведенныйКурсВалют
	               |ИЗ
	               |	КурсВалютСрезНаДату КАК КурсВалютСрезНаДату
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	               |		ПО КурсВалютСрезНаДату.Период = КурсыВалют.Период
	               |			И КурсВалютСрезНаДату.Валюта = КурсыВалют.Валюта
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ 
	               |	Данные.Дата КАК Период,
	               |	Данные.Организация КАК Организация,
	               |	Данные.ДокументСсылка КАК ДокументСсылка,
	               |	Данные.СуммаПроцента КАК СуммаПроцента,
	               |	Данные.Процент КАК Процент,
	               |	Данные.Валюта КАК Валюта,
	               |	Данные.ВВалюте КАК ВВалюте,
	               |	&СчетПрочиеРасходы КАК СчетДт,
	               |	ВЫБОР
	               |		КОГДА Данные.Валюта = &ВалютаРегУчета
	               |			ТОГДА ВЫБОР
	               |					КОГДА Данные.Процент > &ПределПроцента
	               |						ТОГДА &УплатаПроцентов
	               |					ИНАЧЕ &ВнереализационныеРасходы
	               |				КОНЕЦ
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА Данные.Процент > &ПределПроцентаВал
	               |					ТОГДА &УплатаПроцентов
	               |				ИНАЧЕ &ВнереализационныеРасходы
	               |			КОНЕЦ
	               |	КОНЕЦ КАК СубконтоДт1,
	               |	Данные.СчетУчетаПроцентов КАК СчетКт,
	               |	Данные.Контрагент КАК СубконтоКт1,
	               |	Данные.ДокументСсылка КАК СубконтоКт2,
	               |	ВЫБОР
	               |		КОГДА Данные.ВВалюте = ЛОЖЬ
	               |			ТОГДА Данные.СуммаПроцента
	               |		ИНАЧЕ Данные.СуммаПроцента * ПриведенныйКурсВалют.Курс * ПриведенныйКурсВалют.Кратность
	               |	КОНЕЦ КАК Сумма,
	               |	ВЫБОР
	               |		КОГДА Данные.ВВалюте = ЛОЖЬ
	               |			ТОГДА Данные.СуммаПроцента
	               |		ИНАЧЕ Данные.СуммаПроцента * ПриведенныйКурсВалют.Курс * ПриведенныйКурсВалют.Кратность
	               |	КОНЕЦ КАК СуммаНУ,
	               |	ВЫБОР
	               |		КОГДА Данные.ВВалюте = ЛОЖЬ
	               |			ТОГДА 0
	               |		ИНАЧЕ 0 //Данные.СуммаПроцента
	               |	КОНЕЦ КАК СуммаВалютаДт,
	               |	ВЫБОР
	               |		КОГДА Данные.ВВалюте = ЛОЖЬ
	               |			ТОГДА 0
	               |		ИНАЧЕ Данные.СуммаПроцента
	               |	КОНЕЦ КАК СуммаВалютаКт
	               |ИЗ
	               |	Данные КАК Данные
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ПриведенныйКурсВалют КАК ПриведенныйКурсВалют
	               |		ПО Данные.Дата = ПриведенныйКурсВалют.Дата
	               |			И Данные.Валюта = ПриведенныйКурсВалют.Валюта";
	//
	Запрос.УстановитьПараметр("ВалютаРегУчета", ДополнительныеСвойства.ВалютаРегУчета);
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка); 
	Запрос.УстановитьПараметр("СчетПрочиеРасходы", ПланыСчетов.Хозрасчетный.ПрочиеРасходы);
	Запрос.УстановитьПараметр("УплатаПроцентов", Справочники.ПрочиеДоходыИРасходы.ПроцентыКПолучениюУплате);
	Запрос.УстановитьПараметр("ВнереализационныеРасходы", Справочники.ПрочиеДоходыИРасходы.Внереализационные);
	Запрос.УстановитьПараметр("ПределПроцентаВал", ДополнительныеСвойства.ЗначениеПредельнойВеличиныПроцентаВалютногоЗайма);
	Запрос.УстановитьПараметр("ПределПроцента", ДополнительныеСвойства.ЗначениеПредельнойВеличиныПроцентаЗайма);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВДЗ = РезультатЗапроса.Выбрать();
	
	Пока ВДЗ.Следующий() Цикл
		СтрД = Хозрасчетный.Добавить();
		ЗаполнитьЗначенияСвойств(СтрД, ВДЗ);
		
		//в БУХ ТУТ универсальная обработка установки субконто. Имитируем
		Для Индекс = 1 ПО 3 Цикл
			ЗначениеСубконто = Неопределено;
			Если РезультатЗапроса.Колонки.Найти("СубконтоДт" + Индекс) <> Неопределено Тогда
				ЗначениеСубконто = ВДЗ["СубконтоДт" + Индекс];		
			КонецЕсли; 
			Если ЗначениеСубконто = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Для каждого Субконто Из СтрД.СчетДт.ВидыСубконто Цикл 
				
				Если Субконто.ВидСубконто.ТипЗначения.СодержитТип(ТипЗнч(ЗначениеСубконто)) Тогда
					СтрД.СубконтоДт.Вставить(Субконто.ВидСубконто, ЗначениеСубконто)	
				КонецЕсли;
			КонецЦикла;			
	
		КонецЦикла;	
		Для Индекс = 1 ПО 3 Цикл
			ЗначениеСубконто = Неопределено;
			Если РезультатЗапроса.Колонки.Найти("СубконтоКт" + Индекс) <> Неопределено Тогда
				ЗначениеСубконто = ВДЗ["СубконтоКт" + Индекс];		
			КонецЕсли;  
			Если ЗначениеСубконто = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Для каждого Субконто Из СтрД.СчетКт.ВидыСубконто Цикл 
				
				Если Субконто.ВидСубконто.ТипЗначения.СодержитТип(ТипЗнч(ЗначениеСубконто)) Тогда
					СтрД.СубконтоКт.Вставить(Субконто.ВидСубконто, ЗначениеСубконто)	
				КонецЕсли;
			КонецЦикла;			
		КонецЦикла;
		
	КонецЦикла;
	
	Хозрасчетный.Записывать = Истина;
КонецПроцедуры

#КонецОбласти

#КонецЕсли